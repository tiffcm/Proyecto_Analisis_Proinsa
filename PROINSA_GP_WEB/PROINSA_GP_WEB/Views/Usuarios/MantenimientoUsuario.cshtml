@model PROINSA_GP_WEB.Entidad.Usuario
@{
    ViewBag.Title = "MantenimientoUsuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Administrativo / Administrar cuentas / Usuarios /</span> Mantenimiento de usuarios</h4>

<div class="card mb-4">
    <h5 class="card-header" style="color: #DD3333; text-transform:uppercase;">Actualizar información de un usuario</h5>
    <div class="card-body">
        @using (Html.BeginForm("MantenimientoUsuario", "Usuarios", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.ID_EMPLEADO)
            <div class="row gx-3 gy-2 align-items-center">
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Correo Electrónico")
                        @Html.TextBoxFor(m => m.CORREO, new { @class = "form-control", @readonly = "false" })
                    </div>
                </div>
            </div>
            <div class="row gx-3 gy-2 align-items-center">
                <div class="col-6">
                    <div class="mb-4">
                        @Html.Label("Identificacion del usuario")
                        @Html.TextBoxFor(m => m.IDENTIFICACION, new { @class = "form-control", @readonly = "false" })
                    </div>
                </div>
                <div class="col-6">
                    <div class="mb-4">
                        @Html.Label("Nombre del usuario")
                        @Html.TextBoxFor(m => m.NOMBRECOMPLETO, new { @class = "form-control", @readonly = "false" })
                    </div>
                </div>
            </div>
            <div class="row gx-3 gy-2 align-items-center">
                <div class="col-12">
                    <div class="mb-4">
                        @Html.Label("Dirección")
                        @Html.TextBoxFor(m => m.DIRRECION, new { @class = "form-control" })
                    </div>
            </div>
            <div class="row gx-3 gy-2 align-items-center">
                <div class="col-3">
                    <div class="mb-4">
                            @if (Model.TELEFONOS != null && Model.TELEFONOS.Any())
                            {
                                @for (int i = 0; i < Model.TELEFONOS.Count; i++)
                                {
                                    <div class="mb-3 col-md-4">
                                        @Html.HiddenFor(m => m.TELEFONOS![i].ID_TELEFONO, new { Name = $"TELEFONOS[{i}].ID_TELEFONO" })
                                        @Html.Label("Telefono #" + (i + 1))
                                        @Html.TextBoxFor(m => m.TELEFONOS![i].TELEFONO, new { @class = "form-control", Name = $"TELEFONOS[{i}].TELEFONO" })
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No hay teléfonos registrados.</p>
                            }
                    </div>
                </div>
                <div class="col-3">
                    <div class="mb-4">
                            @Html.Label("Salario")
                            @Html.TextBoxFor(m => m.SALARIO, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-6">
                    <div class="mb-4">
                            @Html.Label("Foto")
                            @Html.TextBoxFor(m => m., new { @class = "form-control" })
                    </div>
                </div>
            </div>
            
            <div class="row gx-3 gy-2 align-items-center">
                <div class="col-6">
                    <div class="mb-4">
                        @if (Model.CARGOS != null && Model.CARGOS.Any())
                            {
                                @for (int i = 0; i < Model.TELEFONOS.Count; i++)
                                {
                                    <div class="mb-3 col-md-4">
                                        @Html.HiddenFor(m => m.CARGOS![i].ID_CARGO, new { Name = $"CARGOS[{i}].ID_CARGO" })
                                        @Html.Label("Cargo")
                                        @Html.DropDownListFor(m => m.CARGOS![i].NOMBRE_CARGO, new { @class = "form-control", Name = $"CARGOS[{i}].NOMBRE_CARGO", @readonly = "false" })
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No existen cargos a seleccionar.</p>
                            }
                    </div>
                </div>
                <div class="col-6">
                    <div class="mb-4">
                        <label for="formDepartamento" class="form-label">Departamento</label>
                        <select class="form-select" aria-label="Departamento">
                            <option selected>Seleccione el departamento</option>
                            <option value="1">Departamento 1</option>
                            <option value="2">Departamento 1</option>
                            <option value="3">Departamento 1</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row gx-3 gy-2 align-items-center">
                <div class="col-3">
                    <div class="mb-4">
                        <label for="formEstado" class="form-label">Estado del empleado</label>
                        <select class="form-select" aria-label="Estado actual">
                            <option selected>Seleccione el estado</option>
                            <option value="1">Activo</option>
                            <option value="2">Inactivo</option>
                        </select>
                    </div>
                </div>
                <div class="col-3">
                    <div class="mb-4">
                        <label for="formRol" class="form-label">Rol</label>
                        <select class="form-select" aria-label="Rol">
                            <option selected>Seleccione el rol</option>
                            <option value="1">Administrador</option>
                            <option value="2">Jefe de área</option>
                            <option value="3">Empleado</option>
                        </select>
                    </div>
                </div>
                <div class="col-6">
                    <div class="mb-4">
                        <label for="formHorario" class="form-label">Horario asignado</label>
                        <select class="form-select" aria-label="Horario">
                            <option selected>Seleccione el horario</option>
                            <option value="1">Diurno</option>
                            <option value="2">Intermedio</option>
                            <option value="3">Tarde</option>
                            <option value="4">Noche</option>
                        </select>
                    </div>
                </div>

            <div style="display:grid; place-items:center;">
                <div class="mt-4">
                    <button type="button" class="btn btn-primary" id="liveToastBtn">Actualizar usuario</button>
                </div>
            </div>
        }
    </div>
</div>

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div class="bs-toast toast fade hide bg-success" id="liveToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="bi bi-bell me-3"></i>
            <div class="me-auto fw-semibold">Notificación</div>
            <small>Hace un segundo</small>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            El usuario se actualizó correctamente
        </div>
    </div>
</div>

<!-- Bootstrap JS and Popper.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.5/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        var toastTrigger = document.getElementById('liveToastBtn');
        var toastLiveExample = document.getElementById('liveToast');

        if (toastTrigger) {
            toastTrigger.addEventListener('click', function () {
                var toast = new bootstrap.Toast(toastLiveExample);
                toast.show();
            });
        }
    });
</script>