@model PROINSA_GP_WEB.Entidad.Actividad

@{
    ViewBag.Title = "EditarProyecto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light"> Actividades / </span> Editar Proyecto </h4>

<div class="card mb-4">
    <h5 class="card-header" style="color: #DD3333; text-transform:uppercase;">Edicion del proyecto </h5>

    <div class="card-body">
        @if (ViewBag.msj != null)
        {
            <div class="alert alert-secondary" style="text-align:center" role="alert">
                @ViewBag.msj
            </div>
        }
        @using (Html.BeginForm("EditarProyecto", "Actividades", FormMethod.Post))
        {
            <div class="row">
                @Html.HiddenFor(m => m.ID_PROYECTO)
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Nombre Proyecto")
                        @Html.TextBoxFor(m => m.NOMBRE, new { @class = "form-control", @style = "text-align:center;", @required = "True" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Total horas")
                        @Html.TextBoxFor(m => m.TOTAL_HORAS, new { @class = "form-control", onkeypress = "return ValidarNumeros(event)", @style = "text-align:center;", @required = "True" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Fecha Inicio:")
                        @Html.TextBoxFor(m => m.INICIO_FECHA, new { @class = "form-control", @style = "text-align:center;", @type = "text", @id = "fechaInicioPicker", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Fecha Final")
                        @Html.TextBoxFor(m => m.FINAL_FECHA, new { @class = "form-control", @style = "text-align:center;", @type = "text", @id = "fechaFinPicker", @readonly = "readonly" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Codigo Proyecto")
                        @Html.TextBoxFor(m => m.COD_PROYECTO, new { @class = "form-control", @style = "text-align:center;", @required = "True" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Contacto (PM) ID")
                        @Html.DropDownListFor(m => m.CONTACTO_ID, new SelectList(ViewBag.EmpleadoContactList, "Value", "Text"), new { @class = "form-control", @style = "text-align:center;", @required = "True" })
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Cliente")
                        @Html.DropDownListFor(m => m.ID_CLIENTE, new SelectList(ViewBag.ClientesList, "Value", "Text"), "Selecciona un cliente..", new { @class = "form-control", @style = "text-align:center;", @required = "True" })

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-4">
                        @Html.Label("Estado")
                        @Html.TextBoxFor(m => m.ESTADO, new { @class = "form-control", @style = "text-align:center;", @readonly = "true" })
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="mb-4">
                        @Html.Label("Comentario")
                        @Html.TextAreaFor(m => m.COMENTARIO, new { @class = "form-control", @style = "text-align:center;" })
                    </div>
                </div>
            </div>
            <div style="display:grid; place-items:center;">
                <div class="mt-4">
                    <button type="submit" class="btn btn-primary toastBtn" id="submitButton">Actualizar Proyecto </button>
                </div>
            </div>
        }        
        @using (Html.BeginForm("CambiarEstadoProyecto", "Actividades", new { IdPROYECTO = Model.ID_PROYECTO }, FormMethod.Post))
        {
            <div class="mt-4" style="text-align:center;">
                <button type="submit" class="btn btn-secondary">
                    Cambiar Estado a @(Model.ESTADO == "Activo" ? "Inactivo" : "Activo")
                </button>
            </div>
        }
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.5/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.min.js"></script>
<script src="~/js/toastshow.js"></script>
<script src="~/js/validacionesnumeros.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var today = new Date();
        var maxDate = new Date();
        maxDate.setMonth(maxDate.getMonth() + 3); // Fecha máxima (3 meses en el futuro)

        // Formatear las fechas en el formato yyyy-mm-dd
        var formattedToday = today.toISOString().split('T')[0];
        var formattedMaxDate = maxDate.toISOString().split('T')[0];

        // Obtener los elementos de los inputs de fecha
        var fechaInicioPicker = document.getElementById('fechaInicioPicker');
        var fechaFinPicker = document.getElementById('fechaFinPicker');

        // Establecer el atributo min y max para fecha de inicio
        if (fechaInicioPicker) {
            fechaInicioPicker.setAttribute('min', formattedToday); // Mínimo: hoy
            fechaInicioPicker.setAttribute('max', formattedMaxDate); // Máximo: 3 meses en el futuro
        }

        // Ajustar restricciones para fecha de fin al seleccionar fecha de inicio
        if (fechaInicioPicker && fechaFinPicker) {
            // Establece un mínimo inicial para fecha de fin como el día de hoy
            fechaFinPicker.setAttribute('min', formattedToday);
            fechaFinPicker.setAttribute('max', formattedMaxDate); // Máximo: 3 meses en el futuro

            fechaInicioPicker.addEventListener('change', function () {
                var selectedStartDate = fechaInicioPicker.value;

                // Actualiza el mínimo de fechaFinPicker basado en la fecha seleccionada en fechaInicioPicker
                fechaFinPicker.setAttribute('min', selectedStartDate);
                fechaFinPicker.value = ''; // Resetea el valor de fechaFinPicker
            });
        }
    });
</script>